@import "./variables";
@import "./functions";

/* text */
@mixin text-hidden($toggle-bool) {
  @if ($toggle-bool) {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  } @else {
    white-space: normal;
    text-overflow: clip;
    overflow: visible;
  }
}

//한줄 말줄임

@mixin ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 여러 줄(멀티 라인) 말줄임
// @param $toggle-bool - 텍스트 생략 여부
// @param $line-number - 노출할 텍스트의 줄 수

@mixin multi-ellipsis($toggle-bool, $line-number) {
  @if ($toggle-bool) {
    display: -webkit-box;
    overflow: hidden;
    -webkit-line-clamp: $line-number;
    -webkit-box-orient: vertical;
  } @else {
    display: inherit;
    overflow: visible;
    -webkit-line-clamp: none;
    -webkit-box-orient: unset;
  }
}

@mixin font($size, $weight, $color, $height: 1) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
  line-height: $height;
}

@mixin flex($direction: row, $justify: flex-start, $align: flex-start) {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;

  // Set flex //
  @if $direction==row {
    -webkit-box-orient: horizontal;
    -ms-flex-direction: row;
    flex-direction: row;
  } @else if $direction==row-reverse {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: reverse;
    -ms-flex-direction: row-reverse;
    flex-direction: row-reverse;
  } @else if $direction==column {
    -webkit-box-orient: vertical;
    -ms-flex-direction: column;
    flex-direction: column;
  } @else if $direction==column-reverse {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
  }

  // set justify-content //
  @if $justify==flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  } @else if $justify==flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
  } @else if $justify==center {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  } @else if $justify==space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }

  // set align-items //
  @if $align==flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: flex-start;
  } @else if $align==flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
    align-items: flex-end;
  } @else if $align==center {
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  } @else if $align==stretch {
    -webkit-box-align: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  } @else if $align==baseline {
    -webkit-box-align: baseline;
    -ms-flex-align: baseline;
    align-items: baseline;
  }
}

@mixin flex-grow($grow) {
  -webkit-box-flex: $grow;
  -ms-flex: $grow;
  flex-grow: $grow;
}

@mixin clearfix() {
  &:after {
    content: "";
    display: block;
    clear: both;
  }
}

// set ir
@mixin ir {
  text-indent: -9999px;
  display: block;
  border: 0;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  width: 1px;
  height: 1px;
  margin: 0;
  padding: 0;
  overflow: hidden;
  padding: 0;
  position: fixed;
  left: -9999px;
  white-space: nowrap;
  font-size: 1px;
  transform: translateX(-100px) scale(0.0001);
  z-index: -1;
}
